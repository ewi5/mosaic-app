name: Unzip any zip and deploy
on:
  push:
    branches: [ main ]
    paths: ["*.zip"]   # run when ANY .zip in repo root changes
  workflow_dispatch:

permissions:
  contents: write

jobs:
  unpack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Find the newest zip in repo root
        id: findzip
        run: |
          ZIP=$(ls -t *.zip 2>/dev/null | head -n1 || true)
          if [ -z "$ZIP" ]; then
            echo "No zip found in repo root."
            exit 1
          fi
          echo "zipname=$ZIP" >> $GITHUB_OUTPUT

      - name: Clean repo (except .git, .github, and the zip)
        run: |
          ZIP="${{ steps.findzip.outputs.zipname }}"
          find . -maxdepth 1 -mindepth 1 \
            ! -name ".git" ! -name ".github" ! -name "$ZIP" \
            -exec rm -rf {} +

      - name: Unzip into repo root
        run: unzip -o "${{ steps.findzip.outputs.zipname }}" -d .

      - name: Remove the zip
        run: rm -f "${{ steps.findzip.outputs.zipname }}"

      - name: Commit & push if changed
        run: |
          git config user.name "mosaic-bot"
          git config user.email "actions@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "deploy: unpack ${{ steps.findzip.outputs.zipname }}"
            git push
          else
            echo "No changes to commit."
          fi
